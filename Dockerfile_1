# Use an Ubuntu base image
FROM ubuntu:22.04

# Set environment variables to avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

# Install system dependencies for R and spatial packages
RUN apt-get update && apt-get install -y \
    sudo \
    wget \
    curl \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    libfontconfig1-dev \
    libglib2.0-dev \
    libgdal-dev \
    libgeos-dev \
    libproj-dev \
    libudunits2-dev \
    libpng-dev \
    libjpeg-dev \
    libtiff-dev \
    libgtk2.0-dev \
    r-base \
    r-base-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y \
    xorg-dev \
    libxt-dev \
    libx11-dev \
    libxext-dev \
    libxft-dev \
    libxrandr-dev \
    libxinerama-dev \
    libxmu-dev \
    libxpm-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libgtk2.0-dev \
    libglib2.0-dev \
    && rm -rf /var/lib/apt/lists/*
	
# Install R 4.3.2 explicitly
RUN wget https://cran.r-project.org/src/base/R-4/R-4.3.2.tar.gz
RUN tar -xf R-4.3.2.tar.gz
RUN cd R-4.3.2 && ./configure --enable-R-shlib --without-x && make && make install
RUN cd .. && rm -rf R-4.3.2 R-4.3.2.tar.gz

# Copy local maptools tar.gz into the container
# Assume maptools_1.1-3.tar.gz is in the same folder as the Dockerfile
COPY maptools_1.1-3.tar.gz /tmp/maptools_1.1-3.tar.gz

# Install required R packages
RUN R -e "install.packages(c(      'shiny', 'plotly', 'gridlayout', 'bslib', 'leaflet',       'leaflet.extras', 'sf', 'jsonlite', 'shinyjs',       'raster', 'sqldf', 'RJSONIO', 'httr','data.table', 'robis'      ), repos='https://cloud.r-project.org/')"

# Install maptools from local tar.gz
RUN R CMD INSTALL /tmp/maptools_1.1-3.tar.gz

# Set working directory
WORKDIR /srv/shiny-server

# Copy PseudoAbsenceGenerator.R script into the container
COPY PseudoAbsenceGenerator.R /srv/shiny-server/PseudoAbsenceGenerator.R

# Copy the shiny app folder into the container
COPY pseudo_absence_generator /srv/shiny-server/pseudo_absence_generator

RUN R -e "install.packages(c( 'remotes' ), repos='https://cloud.r-project.org/')"

RUN apt-get update && apt-get install -y \
    sudo \
    wget \
    curl \
    cmake \
    libabsl-dev \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    libfontconfig1-dev \
    libglib2.0-dev \
    libgdal-dev \
    libgeos-dev \
    libproj-dev \
    libudunits2-dev \
    libpng-dev \
    libjpeg-dev \
    libtiff-dev \
    libgtk2.0-dev \
    r-base \
    r-base-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*
	
# Install spatial packages separately to ensure system deps are used
RUN R -e "install.packages(c('sf', 'leaflet', 'leaflet.extras'), repos='https://cloud.r-project.org/', dependencies=TRUE)"

# Install gridlayout from GitHub
RUN R -e "remotes::install_github('rstudio/gridlayout')"

RUN R -e "install.packages(c('robis'), repos='https://cloud.r-project.org/', dependencies=TRUE)"

# Expose Shiny default port
EXPOSE 3838

# Set default working directory
WORKDIR /srv/shiny-server

# Default command (can be overridden)
#CMD ["R"]

RUN rm -rf R-4.3.2 R-4.3.2.tar.gz

CMD ["R", "-e", "shiny::runApp('dataminer', host='0.0.0.0', port=3838)"]

